import type { ObjectId } from "mongodb"

export interface User {
  _id?: ObjectId
  email: string
  password: string
  username: string
  displayName: string
  avatar?: string
  role: "buyer" | "seller" | "admin"
  language: "en" | "th" | "zh"

  // Seller specific fields
  sellerProfile?: {
    bio: string
    website?: string
    socialLinks?: {
      twitter?: string
      instagram?: string
      behance?: string
    }
    paymentInfo?: {
      paypalEmail?: string
      bankAccount?: string
    }
    verified: boolean
  }

  // Buyer specific fields
  wishlist: ObjectId[]
  purchasedFonts: ObjectId[]

  // Notifications
  notifications: {
    wishlistPriceChanges: boolean
    newFontsFromFollowed: boolean
    discordWebhook?: string
  }

  createdAt: Date
  updatedAt: Date
}

export interface Font {
  _id?: ObjectId
  name: string
  description: string
  category: "sans-serif" | "serif" | "display" | "script" | "monospace"
  tags: string[]

  // Seller info
  sellerId: ObjectId
  sellerName: string

  // Pricing
  price: number
  originalPrice?: number
  isFree: boolean

  // Files
  fontFiles: {
    format: "otf" | "ttf" | "woff" | "woff2"
    fileUrl: string
    fileSize: number
  }[]
  previewImages: string[]

  // Language support
  supportedLanguages: ("latin" | "thai" | "chinese" | "cyrillic")[]

  // Stats
  downloads: number
  rating: number
  reviews: ObjectId[]

  // License
  license: {
    type: "personal" | "commercial" | "extended"
    terms: string
    autoGenerated: boolean
  }

  // Status
  status: "draft" | "pending" | "approved" | "rejected"
  featured: boolean
  sponsored: boolean

  createdAt: Date
  updatedAt: Date
}

export interface ChatMessage {
  _id?: ObjectId
  conversationId: ObjectId
  senderId: ObjectId
  receiverId: ObjectId
  message: string
  messageType: "text" | "image" | "font-preview" | "payment-request"

  // Payment related
  paymentRequest?: {
    fontId: ObjectId
    orderId?: ObjectId
    amount: number
    status: "pending" | "paid" | "cancelled"
  }

  readAt?: Date
  createdAt: Date
}

export interface Order {
  _id?: ObjectId
  buyerId: ObjectId
  sellerId: ObjectId
  fontId: ObjectId

  amount: number
  paymentMethod: "chat-payment" | "card" | "paypal" | "chat"
  paymentStatus: "pending" | "completed" | "failed" | "refunded"

  // License generation
  licenseGenerated: boolean
  licenseText?: string
  downloadUrl?: string
  downloadExpiry?: Date

  createdAt: Date
  updatedAt: Date
}

export interface Review {
  _id?: ObjectId
  fontId: ObjectId
  buyerId: ObjectId
  sellerId: ObjectId

  rating: number
  comment: string

  createdAt: Date
}

export interface Notification {
  _id?: ObjectId
  userId: ObjectId
  type: "wishlist-price-change" | "new-font" | "order-update" | "message" | "review"

  title: string
  message: string
  data?: any

  read: boolean
  createdAt: Date
}
